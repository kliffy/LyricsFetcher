exit
c
track_increment
c
track_increment
exit
exti
file.match(/(\d*)\./)[1].to_i
file.match(/(\d*)\./)[1]
file.match(/(\d*)\./)
file.match(/\d*\./)
file.match(/\d*/)
file.match(/\D*/)
file
tag
tag.track
tag.track='1'
tag.track
track
c
giri
".lyrics a[name='#{track}']"
named_element
tag.track
track
exit
tag.track.include?("\x00")
shit[2..14].gsub("\x00",'')
shit[2..14]
shit = tag.track
tag.track
tag.track.unpack('C*')
tag.track
c
tag.track
shit
shit[2..5]
shit.unpack('C*')
shit.gsub("\\x",'')
shit.to_s.force_encoding('UTF-8').gsub("\\x",'')
shit.to_s.force_encoding('UTF-8').gsub("\\xFE",'')
shit.to_s.force_encoding('UTF-8').gsub("\xFE",'')
shit.to_s.force_encoding('UTF-8').gsub("\xFE")
shit.to_s.force_encoding('UTF-8')
shit.to_s.encoding
shit.to_s
shit = tag.track
tag.track
exit
tag.track
exit
tag.track
exit
c
tag.track
tag
tag.tracks
exit
tag.track
exit
tag.track
tag
tag.tracks
exit
tag.track[1].encoding
tag.track[1] = "\xFF"
tag.track[1]
tag.track[0]
tag.track.gsub("\xFE",'')
tag.track.gsub("\xFE")
tag.track
c
tag.track
c
tag.track
exit
tag.track
track
exit
track.to_i
tag.track
track.include?("\x00")
track == '0'
track
exit
(track.to_i + track_increment).to_s
track = file.match(/(\d*)\.*/)[1]
(track.to_i + track_increment).to_s
file.match(/(\d*)\.*/)[1].to_i
file.match(/(\d*)\.*/)[1]
track == '0'
track
tag.track
tag
exit
c
exit
file.match(/(\d*)\.*/).try(:[],1)
file.match(/(\d*)\.*/).try(:[])
file.match(/(\d*)\.*/)[1]
file.match(/(\d*)\.*/)
file.match(/(\d*)\.*/).try(:[],0)
file.match(/(\d*)\.*/)[0]
file.match(/(\d*)\.*/).try(:[],1)
file.match(/(\d*)\.*/)
file.match(/\d*\D/)
file.match(/\d*/)
file.match(/\d/)
file.match(/\D/)
file
exit
tag.track.force_encoding('UTF-8').gsub(/[\u0080-\u00ff]/, '')
tag.track.gsub(/[\u0080-\u00ff]/, '')
tag.track.force_encoding('UTF-8')
tag.track.encoding
tag.track
tag.track.gsub("\x00","").gsub(/\xFF/, "")
tag.track.gsub("\x00","").gsub(/\\xFF/, "")
"SHIT".gsub(/\\xFF/,'')
"SHIT".gsub(//\xFF/,'')
"SHIT".gsub("\xFF",'')
tag.track.gsub("\x00","").gsub("\xFF", "")
tag.track.gsub("\x00","").gsub("\xFE", '')
tag.track.gsub("\x00","")
tag.track
track
c
track
track.include?("\x00")
tag.track
tag
file_location
c
track_increment
c
track_increment
inner_increment
exit
track_increment
c
exit
track
c
tag.track
tag
track
exit
songs_lyrics.keys.sort{|a,b| a.to_i <=> b.to_i}
songs_lyrics.keys.sort{|v| v.to_i}
songs_lyrics.keys.sort
songs_lyrics.sort[2]
songs_lyrics.sort.first
songs_lyrics.sort
songs_lyrics.order
songs_lyrics.keys
songs_lyrics
c
tag
file
c
file
c
file
c
file
c
file
c
file
c
File.directory? folder_location+file
folder_location+file
folder_location
file.directory?
file
exit
giri.search(".lyrics a[name='#{track}']").first
tag.track
tag
exit
tag.track.gsub("\x00","")
tag.track.to_i
tag.track
tag.track.to_json_raw
tag.track.encode
tag.track.methods - Object.methods
tag.track.methods
tag.track.decode
tag.track
tag.track.encode('ISO-8859-1')
tag.track.encode('UTF-8')
tag.track.encode
tag.track
tag.track.force_encoding('ASCII-8BIT')
tag.track
tag.track.force_encoding('UTF-8')
tag.track.encoding
tag.track
c
tag.track.decode
tag.track.valid_encoding?
tag.track.encoding
tag.track
tag
exit
c
"04/13".to_i.to_s
"04/13".to_i
"02/13".to_i
"02".to_i
"01".to_i
tag.track
tag
c
giri.search(".lyrics a[name='#{tag.track}']").first
tag.track
tag
giri.search(".lyrics a[name='#{tag.track}']").first.parent
c
giri.search(".lyrics a[name='#{tag.track}']").first.parent
c
giri.search(".lyrics a[name='#{tag.track}']").first.parent
c
giri.search(".lyrics a[name='#{tag.track}']").first.parent
v
c
giri.search(".lyrics a[name='#{tag.track}']").first.parent
c
giri.search(".lyrics a[name='#{tag.track}']").first.parent
c
giri.search(".lyrics a[name='#{tag.track}']").first.parent
c
giri.search(".lyrics a[name='#{tag.track}']").first.parent
c
giri.search(".lyrics a[name='#{tag.track}']").first.parent
c
giri.search(".lyrics a[name='#{tag.track}']").first.parent
c
giri.search(".lyrics a[name='#{tag.track}']").first.parent
giri.search(".lyrics a[name='#{tag.track}']").first
exit
c
current_element.next_sibling.next_sibling.next_sibling.next_sibling
current_element.next_sibling.next_sibling.next_sibling
current_element.next_sibling.next_sibling
current_element.next_sibling
current_element
h3_start_element
c
exit
c
h3_start_element.next_sibling.next_sibling.next_sibling.next_sibling.next_sibling
h3_start_element.next_sibling.next_sibling.next_sibling.next_sibling
h3_start_element.next_sibling.next_sibling.next_sibling
.next_sibling
h3_start_element.next_sibling.next_sibling
